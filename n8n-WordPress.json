{
  "name": "WP-n8n",
  "nodes": [
    {
      "parameters": {
        "url": "={{ $('Extract Main Domains').item.json.domain + '/wp-sitemap.xml' }}",
        "responseFormat": "string",
        "options": {
          "fullResponse": true,
          "followAllRedirects": true,
          "followRedirect": false
        }
      },
      "id": "f93fc12d-96b9-42bb-8037-3cd5ce8fe610",
      "name": "Get Sitemap XML",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        -2980,
        960
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "jsCode": "return items.map(item => ({\n  json: {\n    domain: item.json['Domain '],\n  }\n}));\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -3460,
        980
      ],
      "id": "09a210af-0e09-4b9e-b8d9-b273223ec373",
      "name": "Extract Main Domains"
    },
    {
      "parameters": {
        "url": "={{ $json.subpage }}",
        "responseFormat": "string",
        "options": {
          "fullResponse": true
        }
      },
      "id": "dc789b77-3e1b-4449-8d33-bdec43dba1a5",
      "name": "Get SubSitemap XML",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        -2560,
        845
      ]
    },
    {
      "parameters": {
        "jsCode": "const results = [];\n\nfor (const item of items) {\n  const xml = item.json.body || item.json.data || '';\n  \n  if (typeof xml !== 'string') {\n    continue; // ho·∫∑c throw n·∫øu b·∫°n mu·ªën d·ª´ng h·∫≥n\n  }\n\n  const urls = [...xml.matchAll(/<loc>(.*?)<\\/loc>/g)].map(match => match[1]);\n\n  for (const url of urls) {\n    results.push({\n      json: {\n        subpage: url,\n      }\n    });\n  }\n}\n\nreturn results;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2780,
        845
      ],
      "id": "393f74e0-ba49-4616-a3c1-497481774e8b",
      "name": "Extract to SubSitemap"
    },
    {
      "parameters": {
        "jsCode": "const results = [];\n\nfor (const item of items) {\n  const xml = item.json.body || item.json.data || '';\n\n  if (typeof xml !== 'string') {\n    throw new Error('Sitemap XML is not a valid string');\n  }\n\n  const matches = [...xml.matchAll(/<loc>(.*?)<\\/loc>/g)];\n  const urls = matches.map(match => match[1]);\n\n  for (const domain of urls) {\n    results.push({ json: { domain } });\n  }\n}\n\nreturn results;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2340,
        845
      ],
      "id": "6a247785-c9f5-4736-98e8-0482467a5968",
      "name": "All URL"
    },
    {
      "parameters": {
        "authentication": "webhook",
        "content": "=Domain: {{ $('Extract Main Domains').item.json.domain }}/wp-sitemap.xml\nError Code: {{ $json.error.code }}\nError Status: {{ $json.error.status }}\n!!! Please check sitemap of your domain\n/////////////////////////////////////",
        "options": {}
      },
      "type": "n8n-nodes-base.discord",
      "typeVersion": 2,
      "position": [
        -2560,
        1170
      ],
      "id": "4dbb2aa7-39b5-49ac-a0e0-3788f5a3e4e0",
      "name": "Log Status",
      "webhookId": "2fa98cec-4155-42b7-98ff-f76b5dadba22",
      "credentials": {
        "discordWebhookApi": {
          "id": "zvzNGUOWjVLOpUv7",
          "name": "Discord Webhook Web Status"
        }
      }
    },
    {
      "parameters": {
        "triggerTimes": {
          "item": [
            {
              "mode": "everyX",
              "value": 6
            }
          ]
        }
      },
      "name": "Cron1",
      "type": "n8n-nodes-base.cron",
      "typeVersion": 1,
      "position": [
        -3880,
        970
      ],
      "id": "371d6eea-f710-40d5-980c-f242e82aa2f1"
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "={{$json.domain}}",
        "allowUnauthorizedCerts": true,
        "responseFormat": "string",
        "options": {
          "fullResponse": true,
          "followAllRedirects": true,
          "followRedirect": false,
          "ignoreResponseCode": false,
          "useQueryString": false
        }
      },
      "name": "Fetch Main Domain",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        -3220,
        980
      ],
      "id": "df20962c-0dad-488d-90dc-b5a70f91dad4",
      "retryOnFail": true,
      "alwaysOutputData": false,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "name": "Sub Domain Loop ",
      "typeVersion": 1,
      "position": [
        -380,
        1180
      ],
      "id": "02a7c4fb-a70b-46dd-9949-27480ffcae59"
    },
    {
      "parameters": {
        "operation": "extractHtmlContent",
        "extractionValues": {
          "values": [
            {
              "key": "image",
              "cssSelector": "img",
              "returnValue": "attribute",
              "attribute": "src",
              "returnArray": true
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.html",
      "typeVersion": 1.2,
      "position": [
        -1760,
        540
      ],
      "id": "3e9d9d9f-44bd-48a3-b773-d54f1c61e34b",
      "name": "Extract Image"
    },
    {
      "parameters": {
        "operation": "extractHtmlContent",
        "extractionValues": {
          "values": [
            {
              "key": "iframe",
              "cssSelector": "iframe",
              "returnValue": "attribute",
              "attribute": "src",
              "returnArray": true
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.html",
      "typeVersion": 1.2,
      "position": [
        -1760,
        780
      ],
      "id": "9afce9ad-fe76-4dc3-bf3f-be066a05441e",
      "name": "Extract IFrame"
    },
    {
      "parameters": {
        "mode": "combineBySql"
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        -1540,
        640
      ],
      "id": "b0aa8056-cf0f-415a-88b0-1b90c3288645",
      "name": "Merge"
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "={{ $json.domain }}",
        "allowUnauthorizedCerts": true,
        "responseFormat": "string",
        "options": {
          "fullResponse": true,
          "followAllRedirects": true,
          "followRedirect": false,
          "ignoreResponseCode": false
        }
      },
      "name": "Fetch Sub Domain",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        -2020,
        660
      ],
      "id": "375fcc54-aba6-4d4e-bb24-85d7fdc9252a",
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "={{ $json.image }}",
        "allowUnauthorizedCerts": true,
        "responseFormat": "string",
        "options": {
          "batchInterval": 1000,
          "fullResponse": true,
          "followAllRedirects": true,
          "followRedirect": false
        }
      },
      "name": "Check IMAGES",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        -840,
        420
      ],
      "id": "fd833c91-5cef-45cd-bfe3-fb8aeb508bb5",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "authentication": "webhook",
        "content": "=\nüö® Domain Error on Images IFrames Report\n\n{{ $('Loop Over Items').item.json.domain }}\n‚ùå Error Code: {{ $('Check Error').item.json.error.code }}\n‚ùå Error Status: {{ $('Check Error').item.json.error.status }}\nüìç Destination: {{ $json.error.input }}\n!!!!!",
        "options": {
          "wait": false
        },
        "embeds": {
          "values": [
            {}
          ]
        }
      },
      "type": "n8n-nodes-base.discord",
      "typeVersion": 2,
      "position": [
        -480,
        400
      ],
      "id": "b5927075-7848-4ef6-89fc-9454d3dbe3ad",
      "name": "Log Images, IFrame",
      "webhookId": "e5912c40-c879-43c5-b221-82754de90ae6",
      "executeOnce": true,
      "alwaysOutputData": false,
      "credentials": {
        "discordWebhookApi": {
          "id": "plVqcriWIgaVQOTN",
          "name": "Discord Webhook Images IFrames"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.statusCode }}",
              "operation": "notEqual",
              "value2": 200
            }
          ]
        }
      },
      "name": "Check Error",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -660,
        420
      ],
      "id": "88f29fca-6f9f-4a7c-8532-6ba736278e6f"
    },
    {
      "parameters": {
        "url": "={{ $('Extract IFrame').item.json.iframe }}",
        "responseFormat": "string",
        "options": {
          "fullResponse": true,
          "followRedirect": true
        }
      },
      "name": "Check IFRAMES",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        -840,
        620
      ],
      "id": "ed89443b-a0af-4532-bd4d-bf161ee6eaac",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "authentication": "webhook",
        "content": "=Domain: {{ $json.domain }}\nStatus: {{ $json.error.status }}\nLog: {{ $json.error.code }}\n////////////////////////////////",
        "options": {}
      },
      "type": "n8n-nodes-base.discord",
      "typeVersion": 2,
      "position": [
        -1160,
        1000
      ],
      "id": "c7391e63-c76f-4b03-82a4-87beaf78cc3c",
      "name": "Log Status SubDomain",
      "webhookId": "2fa98cec-4155-42b7-98ff-f76b5dadba22",
      "credentials": {
        "discordWebhookApi": {
          "id": "zvzNGUOWjVLOpUv7",
          "name": "Discord Webhook Web Status"
        }
      }
    },
    {
      "parameters": {
        "content": "# Additional \n\n## - This is notification for web status and XML Site",
        "height": 360,
        "width": 440,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2780,
        980
      ],
      "id": "9b4f3953-5b91-4c77-b295-dee9b8845135",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "content": "# 3. Checking Site Status and XML \n\n## - Fetch HTML and get Status, also get XML file \n\n## - If Error(404) -> Notification on Status channel \n\n## - If Success -> Go to Check Images and IFrames ",
        "height": 580,
        "width": 480,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -3300,
        550
      ],
      "id": "5f5ac032-cd11-4d55-9554-f5373d86b5db",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "# 1. Cron Jobs \n\n## - Schedule to scan WordPress site",
        "height": 360,
        "width": 260
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -3960,
        770
      ],
      "id": "d872ad86-70fe-4e7e-b5f8-27e5bf41efda",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "# 2. Take and Split Domains\n\n## - Take Lists Domain from GG Sheet \n\n## - Parse list Domains to code\n",
        "height": 500,
        "width": 420,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -3710,
        630
      ],
      "id": "2285adae-c13c-42ad-8433-61708e4bbd34",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "# 5. Extract Images and IFrames \n\n## - Extract All Images and IFrames on Website into array \n\n## - Merge into one \n\n## - Checking if both Array empty (Website default or only text), go to \"true\" branches -> Check the next website\n\n## - If Array not empty  -> Check images and iframes",
        "height": 840,
        "width": 1280,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2200,
        160
      ],
      "id": "a6aa12fb-eb38-4621-8e3c-f6486b5793d9",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "# 6. Notifications \n\n## - After Check by HTTP Request. If there is no error from both Images and IFrame - go to \"true\" branches to run the next domain.\n\n## - If there is an error -> Notify to Discord Channel Images IFrame.\n",
        "height": 720,
        "width": 620,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -920,
        20
      ],
      "id": "d0bacd66-1ac4-4437-b614-a0aed5ff2810",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "content": "# 4. Get sub url\n\n## - Parse code to extract all subsitemap\n\n## - Get all URL by HTTP Request \n\n## - Parse Code again to take URL only",
        "height": 500,
        "width": 640,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2840,
        500
      ],
      "id": "71fb594c-c583-4e03-9c57-d79605d5ee91",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "# Back to Split Batch to run next Domain \n## It's Done :)",
        "height": 380,
        "width": 380,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -600,
        960
      ],
      "id": "9c91e1dc-5f03-437a-b193-57dfd2d61efe",
      "name": "Sticky Note7"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "https://docs.google.com/spreadsheets/d/1gTueOAEUnMkDds2fAxPGd09oPmKyQx53yRR5gEndwkE/edit?gid=0#gid=0",
          "mode": "url"
        },
        "sheetName": {
          "__rl": true,
          "value": "https://docs.google.com/spreadsheets/d/1gTueOAEUnMkDds2fAxPGd09oPmKyQx53yRR5gEndwkE/edit?gid=0#gid=0",
          "mode": "url"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        -3660,
        970
      ],
      "id": "8bd902a2-265d-47a8-b3c6-0553bdb2178e",
      "name": "List Domains1",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "8RoPX4s8CW9ajkwn",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -2160,
        860
      ],
      "id": "d3b72b6c-f8c8-42cf-85fa-8d4d68940996",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "738330fd-6b40-43b5-8ea1-a64ef4ec6f78",
              "leftValue": "={{ $json.image }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            },
            {
              "id": "de5bd2f8-a3da-4b6b-892b-8e65c29f3b7e",
              "leftValue": "={{ $json.iframe }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1340,
        640
      ],
      "id": "30ebd821-7748-4771-b129-9c5377458482",
      "name": "Empty Array1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "612c8a8d-f77a-4d21-a474-b785140179d9",
              "leftValue": "={{ $json.image }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1180,
        500
      ],
      "id": "d99f917a-49f3-4a63-b4d2-7014470794fd",
      "name": "If"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "612c8a8d-f77a-4d21-a474-b785140179d9",
              "leftValue": "={{ $json.iframe }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1180,
        800
      ],
      "id": "693b4a60-25b8-4925-850f-37f1347ac969",
      "name": "If1"
    },
    {
      "parameters": {
        "fieldToSplitOut": "image",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -1020,
        420
      ],
      "id": "22b04d2d-6eb8-440c-a546-2c18d5cc0e7b",
      "name": "Split Out"
    },
    {
      "parameters": {
        "fieldToSplitOut": "iframe",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -1020,
        620
      ],
      "id": "e2c6128f-5c54-4024-b578-c03b42a65f16",
      "name": "Split Out1"
    }
  ],
  "pinData": {},
  "connections": {
    "Get Sitemap XML": {
      "main": [
        [
          {
            "node": "Extract to SubSitemap",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Log Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Main Domains": {
      "main": [
        [
          {
            "node": "Fetch Main Domain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get SubSitemap XML": {
      "main": [
        [
          {
            "node": "All URL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract to SubSitemap": {
      "main": [
        [
          {
            "node": "Get SubSitemap XML",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "All URL": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log Status": {
      "main": [
        [
          {
            "node": "Sub Domain Loop ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cron1": {
      "main": [
        [
          {
            "node": "List Domains1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch Main Domain": {
      "main": [
        [
          {
            "node": "Get Sitemap XML",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Log Status SubDomain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Image": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract IFrame": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Empty Array1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch Sub Domain": {
      "main": [
        [
          {
            "node": "Extract Image",
            "type": "main",
            "index": 0
          },
          {
            "node": "Extract IFrame",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Log Status SubDomain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check IMAGES": {
      "main": [
        [
          {
            "node": "Check Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log Images, IFrame": {
      "main": [
        [
          {
            "node": "Sub Domain Loop ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Error": {
      "main": [
        [
          {
            "node": "Log Images, IFrame",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Sub Domain Loop ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check IFRAMES": {
      "main": [
        [
          {
            "node": "Check Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log Status SubDomain": {
      "main": [
        [
          {
            "node": "Sub Domain Loop ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "List Domains1": {
      "main": [
        [
          {
            "node": "Extract Main Domains",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Fetch Sub Domain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sub Domain Loop ": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Empty Array1": {
      "main": [
        [
          {
            "node": "Sub Domain Loop ",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          },
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Split Out1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Check IMAGES",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out1": {
      "main": [
        [
          {
            "node": "Check IFRAMES",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "9e3841cd-07d7-4352-a46a-8bcca49ab3d6",
  "meta": {
    "instanceId": "67d647721e03059cdf108441440a2d41ef4810359836c5d00eac2393b27716f0"
  },
  "id": "4BDtW2Qc2RnpsL6V",
  "tags": []
}
