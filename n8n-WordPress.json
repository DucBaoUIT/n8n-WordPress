{
  "name": "My workflow",
  "nodes": [
    {
      "parameters": {
        "url": "={{  $('Loop Main Domain').item.json.domain + '/wp-sitemap.xml' }}",
        "responseFormat": "string",
        "options": {
          "fullResponse": true,
          "followRedirect": true
        }
      },
      "id": "f957739b-84bc-4fcc-b1f3-3b802c743f3b",
      "name": "Get Sitemap XML",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        180,
        -640
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "https://docs.google.com/spreadsheets/d/1gTueOAEUnMkDds2fAxPGd09oPmKyQx53yRR5gEndwkE/edit?gid=0#gid=0",
          "mode": "url"
        },
        "sheetName": {
          "__rl": true,
          "value": "https://docs.google.com/spreadsheets/d/1gTueOAEUnMkDds2fAxPGd09oPmKyQx53yRR5gEndwkE/edit?gid=0#gid=0",
          "mode": "url"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        -700,
        -640
      ],
      "id": "b4bdab03-9b8b-47b9-9832-cda8ed0288c7",
      "name": "List Domains",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "8RoPX4s8CW9ajkwn",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "return items.map(item => ({\n  json: {\n    domain: item.json['Domain '],\n  }\n}));\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -500,
        -640
      ],
      "id": "6d166047-303a-4fc3-946c-b59f76b4a10e",
      "name": "Extract Main Domains"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -320,
        -640
      ],
      "id": "148c2cd1-74d2-4bcc-9c62-beed1e45e36e",
      "name": "Loop Main Domain"
    },
    {
      "parameters": {
        "url": "={{ $json.subpage }}",
        "responseFormat": "string",
        "options": {
          "fullResponse": true
        }
      },
      "id": "023011ce-2971-45f8-bc66-62c664738a03",
      "name": "Get SubSitemap XML",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        620,
        -640
      ]
    },
    {
      "parameters": {
        "jsCode": "const xml = items[0].json.body || items[0].json.data || '';\nif (typeof xml !== 'string') {\n  throw new Error('Sitemap XML is not a valid string');\n}\n\nconst urls = [...xml.matchAll(/<loc>(.*?)<\\/loc>/g)].map(match => match[1]);\n\nreturn urls.map(url => ({\n  json: {\n    subpage: url,\n  },\n}));\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        420,
        -640
      ],
      "id": "e765f869-8217-4530-a826-44496490f410",
      "name": "Extract to SubSitemap"
    },
    {
      "parameters": {
        "jsCode": "const results = [];\n\nfor (const item of items) {\n  const xml = item.json.body || item.json.data || '';\n\n  if (typeof xml !== 'string') {\n    throw new Error('Sitemap XML is not a valid string');\n  }\n\n  const matches = [...xml.matchAll(/<loc>(.*?)<\\/loc>/g)];\n  const urls = matches.map(match => match[1]);\n\n  for (const domain of urls) {\n    results.push({ json: { domain } });\n  }\n}\n\nreturn results;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        840,
        -640
      ],
      "id": "f14e7979-75e9-433a-b577-ced242986e27",
      "name": "All URL"
    },
    {
      "parameters": {
        "authentication": "webhook",
        "content": "={{ $json.content }}\n/////////////////////////////////////",
        "options": {}
      },
      "type": "n8n-nodes-base.discord",
      "typeVersion": 2,
      "position": [
        740,
        -220
      ],
      "id": "3d3ca069-04d8-4764-9dc9-698a434c43e7",
      "name": "Log Status",
      "webhookId": "2fa98cec-4155-42b7-98ff-f76b5dadba22",
      "credentials": {
        "discordWebhookApi": {
          "id": "zvzNGUOWjVLOpUv7",
          "name": "Discord Webhook Web Status"
        }
      }
    },
    {
      "parameters": {
        "triggerTimes": {
          "item": [
            {
              "mode": "everyX",
              "value": 6
            }
          ]
        }
      },
      "name": "Cron1",
      "type": "n8n-nodes-base.cron",
      "typeVersion": 1,
      "position": [
        -900,
        -640
      ],
      "id": "75c44a68-0c7f-4429-8e4f-f292d103aebc"
    },
    {
      "parameters": {
        "url": "={{$json.domain}}",
        "responseFormat": "string",
        "options": {
          "fullResponse": true,
          "followRedirect": true
        }
      },
      "name": "Fetch Main Domain",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        -80,
        -640
      ],
      "id": "56731a96-b394-47d6-b63d-c6c0659ff8b6",
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "name": "Sub Domain Loop ",
      "typeVersion": 1,
      "position": [
        3140,
        -240
      ],
      "id": "10f5ae55-a7b9-453f-af3c-fc208522bb35"
    },
    {
      "parameters": {
        "operation": "extractHtmlContent",
        "extractionValues": {
          "values": [
            {
              "key": "image",
              "cssSelector": "img",
              "returnValue": "attribute",
              "attribute": "src",
              "returnArray": true
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.html",
      "typeVersion": 1.2,
      "position": [
        1380,
        -960
      ],
      "id": "85d6da53-4636-4feb-8f86-587e485f1963",
      "name": "Extract Image"
    },
    {
      "parameters": {
        "operation": "extractHtmlContent",
        "extractionValues": {
          "values": [
            {
              "key": "iframe",
              "cssSelector": "iframe",
              "returnValue": "attribute",
              "attribute": "src",
              "returnArray": true
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.html",
      "typeVersion": 1.2,
      "position": [
        1380,
        -700
      ],
      "id": "56a9e21d-cf15-4df7-99db-9fb14d4c5b9c",
      "name": "Extract IFrame"
    },
    {
      "parameters": {
        "mode": "combineBySql"
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        1620,
        -820
      ],
      "id": "2afe6001-5f46-4bf5-b0d9-b9145230600f",
      "name": "Merge"
    },
    {
      "parameters": {
        "url": "={{ $json.domain }}",
        "responseFormat": "string",
        "options": {
          "fullResponse": true,
          "followRedirect": true
        }
      },
      "name": "Fetch Sub Domain",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        1080,
        -640
      ],
      "id": "9dbd4974-b932-44ec-9e11-3c1324372e11",
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "={{ $json.image }}",
        "responseFormat": "string",
        "options": {
          "fullResponse": true,
          "followRedirect": true
        }
      },
      "name": "Check IMAGES",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        2100,
        -940
      ],
      "id": "ae9c596e-a721-4776-a86c-3a3fdd07be1b",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "authentication": "webhook",
        "content": "={{ $('Loop Main Domain').item.json.domain }}\n{{ $json.message }}",
        "options": {
          "wait": false
        }
      },
      "type": "n8n-nodes-base.discord",
      "typeVersion": 2,
      "position": [
        3020,
        -780
      ],
      "id": "02d12767-304f-4d4c-b714-23f234b49e76",
      "name": "Log Images, IFrame",
      "webhookId": "e5912c40-c879-43c5-b221-82754de90ae6",
      "executeOnce": true,
      "alwaysOutputData": false,
      "credentials": {
        "discordWebhookApi": {
          "id": "plVqcriWIgaVQOTN",
          "name": "Discord Webhook Images IFrames"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.statusCode }}",
              "operation": "equal",
              "value2": 200
            },
            {
              "value1": "={{ $json.statusCode }}",
              "operation": "equal",
              "value2": 200
            }
          ]
        }
      },
      "name": "Check Error",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        2320,
        -820
      ],
      "id": "9825bfb4-f9b5-4290-b2c3-1e18b74a146f"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "738330fd-6b40-43b5-8ea1-a64ef4ec6f78",
              "leftValue": "={{ $json.image }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            },
            {
              "id": "de5bd2f8-a3da-4b6b-892b-8e65c29f3b7e",
              "leftValue": "={{ $json.iframe }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1880,
        -820
      ],
      "id": "0be8544c-e4a1-4c7b-a532-f9ae1833a59c",
      "name": "Empty Array"
    },
    {
      "parameters": {
        "url": "={{ $('Extract IFrame').item.json.iframe }}",
        "responseFormat": "string",
        "options": {
          "fullResponse": true,
          "followRedirect": true
        }
      },
      "name": "Check IFRAMES",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        2100,
        -680
      ],
      "id": "acb440e8-bee1-4323-8330-7e62f353cf5e",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "const results = [];\nlet hasEmptyInput = false;\n\nfor (const item of items) {\n  const code = item.json.error?.code;\n  const input = item.json.error?.input;\n\n  \n  if (!input || input.trim() === '') {\n    hasEmptyInput = true;\n    break; \n  }\n\n  if (code) {\n    results.push(`❌ Error Code: ${code}\\n📍 Destination: ${input}`);\n  }\n}\n\n\nreturn [\n  {\n    json: {\n      message: results.length > 0 ? `🚨 Domain Error Report\\n\\n${results.join('\\n\\n')}` : '',\n      hasEmptyInput, \n    },\n  },\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2560,
        -800
      ],
      "id": "3f3490e1-ac21-430e-b001-7df9b0b251ce",
      "name": "Merge Error"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "f10f506f-6396-4a2a-a9f2-2e14858506a7",
              "leftValue": "={{ $json.hasEmptyInput }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2760,
        -800
      ],
      "id": "b4f2fcd7-357f-4d59-b9a8-1c9e57b2ca95",
      "name": "Check Empty File Error "
    },
    {
      "parameters": {
        "authentication": "webhook",
        "content": "=Domain: {{ $json.domain }}\nStatus: {{ $json.error.status }}\nLog: {{ $json.error.code }}\n////////////////////////////////",
        "options": {}
      },
      "type": "n8n-nodes-base.discord",
      "typeVersion": 2,
      "position": [
        1380,
        -440
      ],
      "id": "d84b6181-2a9d-4f71-ae9d-ae6a0f0c0ee3",
      "name": "Log Status SubDomain",
      "webhookId": "2fa98cec-4155-42b7-98ff-f76b5dadba22",
      "credentials": {
        "discordWebhookApi": {
          "id": "zvzNGUOWjVLOpUv7",
          "name": "Discord Webhook Web Status"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const domain = $('Loop Main Domain').first().json.domain || 'Unknown';\nlet message = '';\n\ntry {\n  const sitemapOutput = $items(\"Get Sitemap XML\", 0)[0];\n  const sitemapError = sitemapOutput?.json?.error;\n\n\n  if (sitemapError) {\n    const status = sitemapError.status || 'Unknown';\n    const code = sitemapError.code || 'Unknown';\n    message = `⚠️ Không tìm thấy sitemap!\\n🌐 Domain: ${domain}\\n❗ Status: ${status}\\n🔍 Code: ${code}`;\n  } else {\n    const status = $input.first().json.error.status;\n    const code = $input.first().json.error.code;\n    message = `🚫 Không truy cập được website!\\n🌐 Domain: ${domain}\\n❗ Status: ${status}\\n🔍 Code: ${code}`;\n  }\n\n} catch (e) {\n  const status = $input.first().json.error.status;\n  const code = $input.first().json.error.code;\n  message = `🚫 Không truy cập được website!\\n🌐 Domain: ${domain}\\n❗ Status: ${status}\\n🔍 Code: ${code}`;\n}\n\nreturn [\n  {\n    json: {\n      content: message\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        480,
        -220
      ],
      "id": "5fca2dfb-771d-4b5f-ac96-1138fbb1e246",
      "name": "Filter Status and Sitemap1"
    }
  ],
  "pinData": {},
  "connections": {
    "Get Sitemap XML": {
      "main": [
        [
          {
            "node": "Extract to SubSitemap",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Filter Status and Sitemap1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "List Domains": {
      "main": [
        [
          {
            "node": "Extract Main Domains",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Main Domains": {
      "main": [
        [
          {
            "node": "Loop Main Domain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Main Domain": {
      "main": [
        [],
        [
          {
            "node": "Fetch Main Domain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get SubSitemap XML": {
      "main": [
        [
          {
            "node": "All URL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract to SubSitemap": {
      "main": [
        [
          {
            "node": "Get SubSitemap XML",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log Status": {
      "main": [
        [
          {
            "node": "Sub Domain Loop ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cron1": {
      "main": [
        [
          {
            "node": "List Domains",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "All URL": {
      "main": [
        [
          {
            "node": "Fetch Sub Domain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch Main Domain": {
      "main": [
        [
          {
            "node": "Get Sitemap XML",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Filter Status and Sitemap1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sub Domain Loop ": {
      "main": [
        [
          {
            "node": "Loop Main Domain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Image": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract IFrame": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Fetch Sub Domain": {
      "main": [
        [
          {
            "node": "Extract Image",
            "type": "main",
            "index": 0
          },
          {
            "node": "Extract IFrame",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Log Status SubDomain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check IMAGES": {
      "main": [
        [
          {
            "node": "Check Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log Images, IFrame": {
      "main": [
        [
          {
            "node": "Sub Domain Loop ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Error": {
      "main": [
        [
          {
            "node": "Sub Domain Loop ",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Merge Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Empty Array": {
      "main": [
        [
          {
            "node": "Sub Domain Loop ",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check IMAGES",
            "type": "main",
            "index": 0
          },
          {
            "node": "Check IFRAMES",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check IFRAMES": {
      "main": [
        [
          {
            "node": "Check Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge Error": {
      "main": [
        [
          {
            "node": "Check Empty File Error ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Empty File Error ": {
      "main": [
        [
          {
            "node": "Sub Domain Loop ",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Log Images, IFrame",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Empty Array",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log Status SubDomain": {
      "main": [
        [
          {
            "node": "Sub Domain Loop ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter Status and Sitemap1": {
      "main": [
        [
          {
            "node": "Log Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "b4f813b4-9dff-462a-8d6b-7a25e6584a49",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "67d647721e03059cdf108441440a2d41ef4810359836c5d00eac2393b27716f0"
  },
  "id": "L05x76n57bOTb2qm",
  "tags": []
}
