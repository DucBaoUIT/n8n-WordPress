{
  "name": "My workflow",
  "nodes": [
    {
      "parameters": {
        "url": "={{ $('Extract Main Domains').item.json.domain + '/sitemap.xml' }}",
        "allowUnauthorizedCerts": true,
        "responseFormat": "string",
        "options": {
          "fullResponse": true,
          "followAllRedirects": true,
          "followRedirect": false
        }
      },
      "id": "bc48e7cf-bcf5-484a-abb7-5ac0a32b9a03",
      "name": "Get Sitemap XML",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        -2100,
        740
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "jsCode": "return items.map(item => ({\n  json: {\n    domain: item.json['Domain '],\n  }\n}));\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2580,
        760
      ],
      "id": "51f2d4a1-e7b5-40c9-ad7b-3e11b1f89866",
      "name": "Extract Main Domains"
    },
    {
      "parameters": {
        "url": "={{ $json.subpage }}",
        "allowUnauthorizedCerts": true,
        "responseFormat": "string",
        "options": {
          "fullResponse": true
        }
      },
      "id": "209e4d68-6cdf-4fcd-9630-c6c0ce99a27a",
      "name": "Get SubSitemap XML",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        -1720,
        620
      ]
    },
    {
      "parameters": {
        "jsCode": "const results = [];\n\nfor (const item of items) {\n  const xml = item.json.body || item.json.data || '';\n  \n  if (typeof xml !== 'string') {\n    continue; // hoặc throw nếu bạn muốn dừng hẳn\n  }\n\n  const urls = [...xml.matchAll(/<loc>(?:<!\\[CDATA\\[)?(.*?)(?:\\]\\]>)?<\\/loc>/g)].map(match => match[1]);\n\n  for (const url of urls) {\n    results.push({\n      json: {\n        subpage: url,\n      }\n    });\n  }\n}\n\nreturn results;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1900,
        620
      ],
      "id": "45831038-4a3c-409b-b0ab-ae5d7c5bfb8f",
      "name": "Extract to SubSitemap"
    },
    {
      "parameters": {
        "jsCode": "const results = [];\n\nfor (const item of items) {\n  const xml = item.json.body || item.json.data || '';\n\n  if (typeof xml !== 'string') {\n    throw new Error('Sitemap XML is not a valid string');\n  }\n\n  const matches = [...xml.matchAll(/<loc>(?:<!\\[CDATA\\[)?(.*?)(?:\\]\\]>)?<\\/loc>/g)];\n  const urls = matches.map(match => match[1]);\n\n  for (const domain of urls) {\n    results.push({ json: { domain } });\n  }\n}\n\nreturn results;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1540,
        620
      ],
      "id": "f848e77c-22d2-4b43-ae6f-11e84203f686",
      "name": "All URL"
    },
    {
      "parameters": {
        "authentication": "webhook",
        "content": "=Domain: {{ $('Extract Main Domains').item.json.domain }}/sitemap.xml\nError Code: {{ $json.error.code }}\nError Status: {{ $json.error.status }}\n!!! Please check sitemap of your domain\n/////////////////////////////////////",
        "options": {}
      },
      "type": "n8n-nodes-base.discord",
      "typeVersion": 2,
      "position": [
        -1680,
        860
      ],
      "id": "7863b2ed-b3b9-4b69-a648-cfe16044674c",
      "name": "Log Status",
      "webhookId": "2fa98cec-4155-42b7-98ff-f76b5dadba22",
      "credentials": {
        "discordWebhookApi": {
          "id": "ijERmmgaOVpveUgv",
          "name": "Discord Webhook account"
        }
      }
    },
    {
      "parameters": {
        "triggerTimes": {
          "item": [
            {
              "mode": "everyX",
              "value": 3
            }
          ]
        }
      },
      "name": "Cron1",
      "type": "n8n-nodes-base.cron",
      "typeVersion": 1,
      "position": [
        -3000,
        760
      ],
      "id": "3dbdb7e7-0f7a-4380-b2aa-930fe3c1da95"
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "={{$json.domain}}",
        "allowUnauthorizedCerts": true,
        "responseFormat": "string",
        "options": {
          "fullResponse": true,
          "followAllRedirects": true,
          "followRedirect": false,
          "ignoreResponseCode": false,
          "useQueryString": false
        }
      },
      "name": "Fetch Main Domain",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        -2340,
        760
      ],
      "id": "e020cbeb-116b-46d2-93d4-1efd6c9009fc",
      "retryOnFail": true,
      "alwaysOutputData": false,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "name": "Sub Domain Loop ",
      "typeVersion": 1,
      "position": [
        500,
        860
      ],
      "id": "d1e4fc9f-de36-4855-a1f2-047b44620556"
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "={{ $json.domain }}",
        "allowUnauthorizedCerts": true,
        "responseFormat": "string",
        "options": {
          "fullResponse": true,
          "followAllRedirects": true,
          "followRedirect": false,
          "ignoreResponseCode": false
        }
      },
      "name": "Fetch Sub Domain",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        -1160,
        460
      ],
      "id": "5d10b939-a871-4346-8c39-477bd784e40c",
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "requestMethod": "HEAD",
        "url": "={{ $json.image }}",
        "allowUnauthorizedCerts": true,
        "responseFormat": "string",
        "options": {
          "batchInterval": 1000,
          "fullResponse": true,
          "followAllRedirects": true,
          "followRedirect": false
        }
      },
      "name": "Check IMAGES",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        -220,
        340
      ],
      "id": "99b323e4-f0ba-4d65-aeb2-50d4188e2772",
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "authentication": "webhook",
        "content": "={{ $json.content }}\n--------------------------------------------------------",
        "options": {
          "wait": false
        }
      },
      "type": "n8n-nodes-base.discord",
      "typeVersion": 2,
      "position": [
        380,
        280
      ],
      "id": "c5fdc667-88b7-4360-9063-ca826ee7a1cf",
      "name": "Log Images, IFrame",
      "webhookId": "e5912c40-c879-43c5-b221-82754de90ae6",
      "executeOnce": true,
      "alwaysOutputData": false,
      "credentials": {
        "discordWebhookApi": {
          "id": "ocy9BCF6vbNvMPr5",
          "name": "Discord Webhook Images IFrames "
        }
      }
    },
    {
      "parameters": {
        "requestMethod": "HEAD",
        "url": "={{ $json.iframe }}",
        "allowUnauthorizedCerts": true,
        "responseFormat": "string",
        "options": {
          "fullResponse": true,
          "followRedirect": true
        }
      },
      "name": "Check IFRAMES",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        -240,
        560
      ],
      "id": "f4ef9916-eb45-4ca3-b50b-a2babd313eaa",
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "authentication": "webhook",
        "content": "=Domain: {{ $json.domain }}\nStatus: {{ $json.error.status }}\nLog: {{ $json.error.code }}\n////////////////////////////////",
        "options": {}
      },
      "type": "n8n-nodes-base.discord",
      "typeVersion": 2,
      "position": [
        -860,
        780
      ],
      "id": "a0df5883-96ca-4f8d-b8d5-210efd7f1770",
      "name": "Log Status SubDomain",
      "webhookId": "2fa98cec-4155-42b7-98ff-f76b5dadba22"
    },
    {
      "parameters": {
        "content": "# Additional \n\n## - This is notification for web status and XML Site",
        "height": 200,
        "width": 440,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1960,
        900
      ],
      "id": "9712fc0b-b1ae-44aa-abc4-54071994df58",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "content": "# 3. Checking Site Status and XML \n\n## - Fetch HTML and get Status, also get XML file \n\n## - If Error(404) -> Notification on Status channel \n\n## - If Success -> Go to Check Images and IFrames ",
        "height": 580,
        "width": 480,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2420,
        340
      ],
      "id": "39349af2-26b3-4b44-9592-01e5c6252b8c",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "# 1. Cron Jobs \n\n## - Schedule to scan WordPress site",
        "height": 360,
        "width": 260
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -3080,
        560
      ],
      "id": "d6662aa0-d60e-47d8-a78e-3312a9ce359a",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "# 2. Take and Split Domains\n\n## - Take Lists Domain from GG Sheet \n\n## - Parse list Domains to code\n",
        "height": 500,
        "width": 420,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2840,
        420
      ],
      "id": "585b2704-79d3-4d4f-b80e-0a4f8462323d",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "# 5. Extract Images and IFrames \n\n## - Extract All Images and IFrames on Website into array \n\n## - Checking if both Array empty (Website default or only text), go to \"true\" branches -> Check the next website\n\n## - If Array not empty  -> Split Images and IFrames -> Check images and iframes",
        "height": 680,
        "width": 1140,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1400,
        60
      ],
      "id": "4d56309e-1ad8-4c3b-b4b1-6fc6f9849e00",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "# 6. Notifications \n\n## - After Check by HTTP Request. If there is no error from both Images and IFrame - go to \"true\" branches to run the next domain.\n\n## - If there is an error -> Notify to Discord Channel Images IFrame.\n",
        "height": 740,
        "width": 660,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -240,
        0
      ],
      "id": "4792d952-8728-4ad7-8263-67d7f602e224",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "content": "# 4. Get sub url\n\n## - Parse code to extract all subsitemap\n\n## - Get all URL by HTTP Request \n\n## - Parse Code again to take URL only",
        "height": 500,
        "width": 540,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1960,
        280
      ],
      "id": "74edac09-4654-4643-8d78-279dccf43341",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "# Back to Split Batch to run next Domain \n## It's Done :)",
        "height": 380,
        "width": 380,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        280,
        740
      ],
      "id": "81a72cac-7b34-4c0f-b9e3-d0d4273d8dfd",
      "name": "Sticky Note7"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "https://docs.google.com/spreadsheets/d/1gTueOAEUnMkDds2fAxPGd09oPmKyQx53yRR5gEndwkE/edit?gid=0#gid=0",
          "mode": "url"
        },
        "sheetName": {
          "__rl": true,
          "value": "https://docs.google.com/spreadsheets/d/1gTueOAEUnMkDds2fAxPGd09oPmKyQx53yRR5gEndwkE/edit?gid=0#gid=0",
          "mode": "url"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        -2780,
        760
      ],
      "id": "b79bd97d-201a-48ca-a991-2ece7204a327",
      "name": "List Domains1",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "999rVWVTeL3MAbrk",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "batchSize": 50,
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -1360,
        620
      ],
      "id": "23f5c0a7-a0a1-442f-9ba5-52b6dee4eaab",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "738330fd-6b40-43b5-8ea1-a64ef4ec6f78",
              "leftValue": "={{ $json.image }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            },
            {
              "id": "de5bd2f8-a3da-4b6b-892b-8e65c29f3b7e",
              "leftValue": "={{ $json.iframe }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -600,
        440
      ],
      "id": "13a435e6-e705-495c-a963-c2d23651f9d8",
      "name": "Empty Array1"
    },
    {
      "parameters": {
        "fieldToSplitOut": "image",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -400,
        340
      ],
      "id": "0a02f710-4440-4219-9b2c-ab5b933f70aa",
      "name": "Split Out"
    },
    {
      "parameters": {
        "fieldToSplitOut": "iframe",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -400,
        560
      ],
      "id": "a394af02-fb34-4448-a04c-ea461de3bb86",
      "name": "Split Out1"
    },
    {
      "parameters": {
        "jsCode": "return items.map(item => {\n  const images = item.json.image || [];\n\n  const filtered = images\n    .filter(src => typeof src === 'string' && !src.startsWith('data:')) // loại bỏ base64\n    .map(src => {\n      if (src.startsWith('//')) {\n        return 'https:' + src;\n      }\n      if (!src.startsWith('http')) {\n        return 'https://' + src;\n      }\n      return src;\n    });\n\n  return {\n    json: {\n      ...item.json,\n      image: filtered,\n    },\n  };\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -760,
        440
      ],
      "id": "80b4cbe6-621a-4f8d-9432-80dd12521032",
      "name": "Code"
    },
    {
      "parameters": {
        "operation": "extractHtmlContent",
        "extractionValues": {
          "values": [
            {
              "key": "image",
              "cssSelector": "img",
              "returnValue": "attribute",
              "attribute": "src",
              "returnArray": true
            },
            {
              "key": "iframe",
              "cssSelector": "iframe",
              "returnValue": "attribute",
              "attribute": "src",
              "returnArray": true
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.html",
      "typeVersion": 1.2,
      "position": [
        -920,
        440
      ],
      "id": "51114416-da28-489e-8f4b-c5d2735ae768",
      "name": "Extract "
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        80,
        280
      ],
      "id": "602a8453-ddb6-4fc3-85c9-3c209471b1df",
      "name": "Merge"
    },
    {
      "parameters": {
        "jsCode": "const domain = $('Loop Over Items').item.json.domain || 'Unknown';\nconst seen = new Set();\nconst results = [];\n\nfor (const item of items) {\n  const error = item.json.error;\n  const image = item.json.image;\n  const iframe = item.json.iframe;\n\n  if (!error) continue;\n\n  const urls = [];\n\n  // Đảm bảo đưa cả image và iframe vào nếu có\n  if (Array.isArray(image)) urls.push(...image);\n  else if (image) urls.push(image);\n\n  if (Array.isArray(iframe)) urls.push(...iframe);\n  else if (iframe) urls.push(iframe);\n\n  for (const url of urls) {\n    if (!url || seen.has(url)) continue;\n    seen.add(url);\n\n    const code = error.code || 'Unknown';\n    const status = error.status || 'Unknown';\n\n    results.push(`❌ Error\\n🔗 URL: ${url}\\n💥 Code: ${code}\\n📶 Status: ${status}`);\n  }\n}\n\nreturn [{\n  json: {\n    content: results.length > 0\n      ? `🚨 Error Report for: ${domain}\\n\\n${results.join('\\n\\n')}`\n      : '',\n  },\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        240,
        280
      ],
      "id": "5db147bb-93aa-41c5-b2d1-c9a260ec1126",
      "name": "Code1"
    },
    {
      "parameters": {
        "inputSource": "passthrough"
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -3100,
        420
      ],
      "id": "f7f22460-ef54-4d2c-ba07-b7cce3ba938e",
      "name": "When Executed by Another Workflow"
    }
  ],
  "pinData": {},
  "connections": {
    "Get Sitemap XML": {
      "main": [
        [
          {
            "node": "Extract to SubSitemap",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Log Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Main Domains": {
      "main": [
        [
          {
            "node": "Fetch Main Domain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get SubSitemap XML": {
      "main": [
        [
          {
            "node": "All URL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract to SubSitemap": {
      "main": [
        [
          {
            "node": "Get SubSitemap XML",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "All URL": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log Status": {
      "main": [
        [
          {
            "node": "Sub Domain Loop ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cron1": {
      "main": [
        [
          {
            "node": "List Domains1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch Main Domain": {
      "main": [
        [
          {
            "node": "Get Sitemap XML",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Log Status SubDomain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sub Domain Loop ": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch Sub Domain": {
      "main": [
        [
          {
            "node": "Extract ",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Log Status SubDomain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check IMAGES": {
      "main": [
        [
          {
            "node": "Sub Domain Loop ",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log Images, IFrame": {
      "main": [
        [
          {
            "node": "Sub Domain Loop ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check IFRAMES": {
      "main": [
        [
          {
            "node": "Sub Domain Loop ",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "List Domains1": {
      "main": [
        [
          {
            "node": "Extract Main Domains",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Fetch Sub Domain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Empty Array1": {
      "main": [
        [
          {
            "node": "Sub Domain Loop ",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          },
          {
            "node": "Split Out1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Check IMAGES",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out1": {
      "main": [
        [
          {
            "node": "Check IFRAMES",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Empty Array1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract ": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Log Images, IFrame",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "List Domains1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "32c1a97c-5a5a-4f9d-a010-3960ddc6273e",
  "meta": {
    "instanceId": "da33118653b457a38767846f003a1ddd3b6e88f9568f32164fe696d219064bab"
  },
  "id": "ySNnYcUFePzs1yWC",
  "tags": []
}
